p + ggtitle("Another random permutation")
dati1levperm=perm %>%
group_by(Subject) %>%
summarize(estim=(coefficients(lm(Reaction ~ Days))))
dati1levperm$coeff=(rep(c("Interc","Slope"),nlevels(sleepstudy$Subject)))
dati1levperm=spread(dati1levperm, key = coeff, value = estim)
head(dati1levperm)
mean(dati1levperm$Slope)
Slopes_flips=replicate(100,{
rnd=sapply((0:17)*10,function(strt) {
if(rbinom(1,1,.5)==1)
strt+(1:10) else
strt+(10:1)
})
rnd=as.vector(rnd)
perm$Reaction=sleepstudy$Reaction[rnd]
dati1levperm=perm %>%
group_by(Subject) %>%
summarize(Slope=(coefficients(lm(Reaction ~ Days))[2]))
mean(dati1levperm$Slope)
})
# ON OBSERVED DATA:
dati1lev=sleepstudy %>%
group_by(Subject) %>%
summarize(Slope=(coefficients(lm(Reaction ~ Days))[2]))
Observed=mean(dati1lev$Slope)
# ALWAYS ADD THE OBSERVED TEST STATISTIC!!! (it is one of the possible flips)
Slopes_flips=c(Observed,Slopes_flips)
hist(Slopes_flips)
# One sided alternative
mean(Slopes_flips>=Observed)
# Two sided alternative
mean(abs(Slopes_flips)>=abs(Observed))
#devtools::install_github("livioivil/flipscores")
library(flipscores)
#effect of Days:
(res=flipscores(Slope~1,data=dati1lev))
library(devtools)
devtools::install("C:\\Users\\livio\\OneDrive\\Documenti\\github\\flipscores")
#effect of Days:
(res=flipscores(Slope~1,data=dati1lev))
debug(compute_scores)
(res=flipscores(Slope~1,data=dati1lev))
debug(flipscores)
undebug(compute_scores)
(res=flipscores(Slope~1,data=dati1lev))
nrm = sapply(results, function(x) attributes(x[[1]]$scores)$scale_objects$nrm)
str(results)
sapply(results, function(x) attributes(x[[1]]$scores)$scale_objects$nrm)
sapply(results, function(x) attributes(x[[1]][[1]]$scores)$scale_objects$nrm)
sapply(results[[1]], function(x) attributes(x[[1]]$scores)$scale_objects$nrm)
str(results[[1]])
str(results[[1]][[1]]$scores)
(res=flipscores(Slope~1,data=dati1lev))
model$scores = data.frame(lapply(results, function(x) x[[1]]$scores))
attributes(x[[1]][[1]]$scores)$scale_objects$nrm
attributes(results[[1]][[1]]$scores)$scale_objects$nrm
attributes(results[1][[1]]$scores)$scale_objects$nrm
attributes(results[[1]][[1]]$scores)
attributes(results[[1]][[1]]$scores)$scale_objects
attributes(results[[1]][[1]]$scores)$scale_objects$
nrm
debug(compute_scores)
(res=flipscores(Slope~1,data=dati1lev))
results = lapply(to_be_tested, socket_compute_scores_and_flip,
model, flip_param_call = flip_param_call)
str(scores)
scale_objects
attr(scores,"scale_objects")=list(nrm = 1)
str(scores)
devtools::install("C:\\Users\\livio\\OneDrive\\Documenti\\github\\flipscores")
#effect of Days:
(res=flipscores(Slope~1,data=dati1lev))
debug(compute_scores)
debug(flipscores)
(res=flipscores(Slope~1,data=dati1lev))
str(scores)
attr(scores, "scale_objects") = list(list(nrm = 1))
nrm
devtools::install("C:\\Users\\livio\\OneDrive\\Documenti\\github\\flipscores")
#effect of Days:
(res=flipscores(Slope~1,data=dati1lev))
summary(res)
data("sleepstudy", package="lme4")
data("sleepstudy", package="lme4")
sleepstudy
View(sleepstudy)
summary(sleepstudy)
library(lmerTest)
library(ggplot2)
p=ggplot(sleepstudy, aes(x = Days, y = Reaction)) + geom_point()
p
p+geom_smooth(method=lm)
mod <- lm(Reaction ~ Days, sleepstudy)
summary(mod)
summary(mod)
Reaction = 251.405+10.467*3
Reaction
p+geom_smooth(method=lm)
library(ggplot2)
p=ggplot(sleepstudy, aes(x = Days, y = Reaction, colour = Subject, group = Subject)) + geom_point()  +geom_smooth(method = lm,alpha=.00)
p
mod <- lmer(Reaction ~ 1+Days + (1+Days|Subject), data=sleepstudy)
summary(mod)
summary(sleepstudy)
dim(sleepstudy)
sqrt(612)
summary(lmer(Reaction ~ 1+Days + (1|Subject), data=sleepstudy))
summary(lmer(Reaction ~ 1+Days + (Days|Subject), data=sleepstudy))
summary(lmer(Reaction ~ 1+Days + (0+Days|Subject), data=sleepstudy))
summary(lmer(Reaction ~ 1+Days + (1+Days|Subject), data=sleepstudy[1:90,]))
summary(lmer(Reaction ~ 1+Days + (1+Days|Subject), data=sleepstudy[1:40,]))
summary(lmer(Reaction ~ 1+Days + (1+Days|Subject), data=sleepstudy))
summary(lmer(Reaction ~ 1+Days + (1+Days||Subject), data=sleepstudy))
sleepstudy2=sleepstudy[sleepstudy$Days<=1,]
View(sleepstudy2)
library(lmerTest)
mod <- lmer(Reaction ~ 1+Days + (1 + Days| Subject), data=sleepstudy2)
mod <- lmer(Reaction ~ 1+Days + (1 | Subject), data=sleepstudy2)
summary(mod)
sleepstudy2$Reaction[sleepstudy2$Days==0]
sleepstudy2$Reaction[sleepstudy2$Days==1]
t.test(sleepstudy2$Reaction[sleepstudy2$Days==1],sleepstudy2$Reaction[sleepstudy2$Days==0],paired = TRUE)
t.test(sleepstudy2$Reaction[sleepstudy2$Days==1]-sleepstudy2$Reaction[sleepstudy2$Days==0])
sleepstudy2$Reaction[sleepstudy2$Days==1]-sleepstudy2$Reaction[sleepstudy2$Days==0]
t.test(sleepstudy2$Reaction[sleepstudy2$Days==1]-sleepstudy2$Reaction[sleepstudy2$Days==0])
mod <- lm(Reaction ~ Days+ Subjects, sleepstudy2)
mod <- lm(Reaction ~ Days+ Subject, sleepstudy2)
summary(mod)
sleepstudy2$Subject=factor(sleepstudy2$Subject)
mod <- lm(Reaction ~ Days+ Subject, sleepstudy2)
summary(mod)
### dataset completo:
mod <- lm(Reaction ~ Days+ Subject, sleepstudy)
summary(mod)
subset(sleepstudy,Subject==308)
sleepstudy[sleepstudy$Subject==308,]
dataset_subj=subset(sleepstudy,Subject==308) #sleepstudy[sleepstudy$Subject==308,]
mod <- lm(Reaction ~ Days, data=dataset_subj)
summary(mod)
str(mod)
#str(mod)
mod$coefficients
#str(mod)
mod$coefficients[2]
dataset_subj=subset(sleepstudy,Subject==309) #sleepstudy[sleepstudy$Subject==308,]
mod <- lm(Reaction ~ Days, data=dataset_subj)
#str(mod)
mod$coefficients[2]
dataset_subj=subset(sleepstudy,Subject==310) #sleepstudy[sleepstudy$Subject==308,]
mod <- lm(Reaction ~ Days, data=dataset_subj)
#str(mod)
mod$coefficients[2]
get_b1_subj <- function(subj,sleepstudy){
dataset_subj=subset(sleepstudy,Subject==subj) #sleepstudy[sleepstudy$Subject==308,]
mod <- lm(Reaction ~ Days, data=dataset_subj)
#str(mod)
mod$coefficients[2]
}
get_b1_subj <- function(subj,sleepstudy){
dataset_subj=subset(sleepstudy,Subject==subj) #sleepstudy[sleepstudy$Subject==308,]
mod <- lm(Reaction ~ Days, data=dataset_subj)
#str(mod)
mod$coefficients[2]
}
get_b1_subj
get_b1_subj(308,sleepstudy)
get_b1_subj(309,sleepstudy)
get_b1_subj(310,sleepstudy)
unique(sleepstudy)
sleepstudy$Subject
unique(sleepstudy$Subject)
sapply(unique(sleepstudy$Subject),get_b1_subj,sleepstudy)
get_b1_subj <- function(subj,dataset){
dataset_subj=subset(dataset,Subject==subj) #sleepstudy[sleepstudy$Subject==308,]
mod <- lm(Reaction ~ Days, data=dataset_subj)
#str(mod)
mod$coefficients[2]
}
b1_subj=sapply(unique(sleepstudy$Subject),get_b1_subj,sleepstudy)
b1_subj
(b1_subj=sapply(unique(sleepstudy$Subject),get_b1_subj,sleepstudy))
t.test(b1_subj)
library(ggplot2)
perm=sleepstudy
rnd=sapply((0:17)*10,function(strt) {
if(rbinom(1,1,.5)==1)
strt+(1:10) else
strt+(10:1)
})
rnd=as.vector(rnd)
rnd
perm$Reaction=sleepstudy$Reaction[rnd]
View(perm)
Slopes_flips=replicate(10000,{
rnd=sapply((0:17)*10,function(strt) {
if(rbinom(1,1,.5)==1)
strt+(1:10) else
strt+(10:1)
})
rnd=as.vector(rnd)
perm$Reaction=sleepstudy$Reaction[rnd]
dati1levperm=perm %>%
group_by(Subject) %>%
summarize(Slope=(coefficients(lm(Reaction ~ Days))[2]))
mean(dati1levperm$Slope)
})
# ON OBSERVED DATA:
dati1lev=sleepstudy %>%
group_by(Subject) %>%
summarize(Slope=(coefficients(lm(Reaction ~ Days))[2]))
Observed=mean(dati1lev$Slope)
# ALWAYS ADD THE OBSERVED TEST STATISTIC!!! (it is one of the possible permutations)
Slopes_flips=c(Observed,Slopes_flips)
# One sided alternative
mean(Slopes_flips>=Observed)
knitr::opts_chunk$set(echo = TRUE)
dati=read.csv(file = "oasis_longitudinal.csv")
dati$Group=factor(dati$Group,levels=c("Nondemented","Converted","Demented"))
# da qui 0 è pari a Age=77
dati$Age=dati$Age-77
View(dati)
mod <- lmer(nBMV~1+(1|Subject.ID), data = dati)
mod <- lmer(nWBV~1+(1|Subject.ID), data = dati)
summary(mod)
mod <- lmer(nWBV~1+Group+Age+(1|Subject.ID), data = dati)
summary(mod)
knit_with_parameters("~/github/longlab/sleepstudy_analysis.Rmd", encoding = "UTF-8")
knitr::opts_chunk$set(echo = TRUE)
load(file="adolong.Rdata")
summary(adolong)
summary(adolong)
load("C:/Users/livio/OneDrive/Documenti/github/longlab/BtheB_long.Rdata")
View(BtheB_long)
layout(matrix(1:2, nrow = 1))
ylim <- range(BtheB[,grep("bdi", names(BtheB))], na.rm = TRUE)
boxplot(subset(BtheB, treatment == "TAU")[,grep("bdi", names(BtheB))],
main = "Treated as usual", ylab = "BDI",
xlab = "Time (in months)", names = c(0, 2, 3, 5, 8), ylim = ylim)
boxplot(subset(BtheB, treatment == "BtheB")[,grep("bdi", names(BtheB))],
main = "Beat the Blues", ylab = "BDI", xlab = "Time (in months)",
names = c(0, 2, 3, 5, 8), ylim = ylim)
knitr::opts_chunk$set(echo = TRUE)
dati=read.csv(file = "oasis_longitudinal.csv")
dati$Group=factor(dati$Group,levels=c("Nondemented","Converted","Demented"))
# da qui 0 è pari a Age=77
dati$Age=dati$Age-77
library(ggplot2)
p <- ggplot(dati,aes(Group,nWBV,color=Group))
p+geom_point(size = 3) +geom_boxplot(alpha=.1)
p <- ggplot(dati,aes(Age,nWBV,color=Group))
p+geom_point(size = 3) +geom_smooth(method = lm)
library(lmerTest)
library(ggplot2)
p=ggplot(dati, aes(x = Age, y = nWBV, colour = Group, group = Subject.ID)) + geom_line() + geom_point()
p
mod=lmer(nWBV ~ Group+Age+(1+Age|Subject.ID),data=dati)
summary(mod)
anova(mod)
mod=lmer(nWBV ~ Age*Group+(1+Age|Subject.ID),data=dati)
summary(mod)
anova(mod)
library(tidyverse)
dati1lev=dati %>%
group_by(Subject.ID) %>%
summarize(estim=(coefficients(lm(nWBV ~ Age))))
dati1lev$coeff=(rep(c("Interc","Slope"),150))
temp=dati %>%
group_by(Subject.ID) %>%
summarize(Group=Group[1])
library(tidyr)
dati1lev=spread(dati1lev, key = coeff, value = estim)
dati1lev=left_join(dati1lev,temp)
head(dati1lev)
###############plots
p <- ggplot(dati1lev,aes(Group,Interc,color=Group))
p+geom_point(size = 3) +geom_boxplot(alpha=.1)
p <- ggplot(dati1lev,aes(Group,Slope,color=Group))
p+geom_point(size = 3) +geom_boxplot(alpha=.1)
library(flipscores)
#main within effect
res=flipscores(Interc~1+Group,data=dati1lev,score_type="standardized")
summary(res)
anova(res)
#main between effect
(res=flipscores(Slope~1+Group,data=dati1lev,score_type="standardized"))
summary(res)
anova(res)
library(lmerTest)
library(ggplot2)
p=ggplot(dati, aes(x = Age, y = nWBV, colour = Group, group = Subject.ID)) + geom_line() + geom_point()
p
dati$Group
contrasts(dati$Group)
mod=lmer(nWBV ~ Group+Age+(1+Age|Subject.ID),data=dati)
summary(mod)
model.matrix( ~ Group,data=dati)
model.matrix( ~ 0+Group,data=dati)
model.matrix( ~ Group,data=dati)
model.matrix( ~ Age*Group,data=dati)
mod=lmer(nWBV ~ Age*Group+(1+Age|Subject.ID),data=dati)
mod=lmer(nWBV ~ Group+Age+(1+Age|Subject.ID),data=dati)
summary(mod)
mod=lmer(nWBV ~ Age*Group+(1+Age|Subject.ID),data=dati)
summary(mod)
anova(mod)
library(tidyverse)
dati1lev=dati %>%
group_by(Subject.ID) %>%
summarize(estim=(coefficients(lm(nWBV ~ Age))))
dati1lev=dati %>%
group_by(Subject.ID) %>%
summarize(estim=(coefficients(lm(nWBV ~ Age))))
dati1lev$coeff=(rep(c("Interc","Slope"),150))
temp=dati %>%
group_by(Subject.ID) %>%
summarize(Group=Group[1])
library(tidyr)
dati1lev=spread(dati1lev, key = coeff, value = estim)
dati1lev=left_join(dati1lev,temp)
str(dati1lev)
15/6
6*2.3333333333333333333333333333333333333333333
13/6
6*0.166666666666666666666666666
1/6
144/60
0.4*60
allpairs
allpair
pairs
sanmple(13)
sample(13)
sample(4)
sample(4)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("lme4")
data("sleepstudy", package="lme4")
summary(sleepstudy)
library(lmerTest)
library(ggplot2)
p=ggplot(sleepstudy, aes(x = Days, y = Reaction)) + geom_point() + theme_bw()
p
p+geom_smooth(method=lm)
mod <- lm(Reaction ~ Subject + Days, sleepstudy)
summary(mod)
p=ggplot(sleepstudy, aes(x = Days, y = Reaction, colour = Subject, group = Subject)) + geom_point()  +geom_line(aes(x = Days, y = Reaction, colour = Subject, group = Subject))
p+ theme_bw()
# The standard way
mod=aov(Reaction ~ Days + Error(Subject/(Days)),data=sleepstudy)
summary(mod)
library(ez)
mod=ezANOVA(dv=Reaction, wid=Subject, within=.(Days),data=sleepstudy,type=3)
print(mod)
library(lmerTest)
mod <- lmer(Reaction ~ 1+Days + (1 + Days| Subject), data=sleepstudy)
summary(mod)
sleepstudy$predicted=predict(mod)
library(ggplot2)
p=ggplot(sleepstudy, aes(x = Days, y = Reaction, colour = Subject, group = Subject)) + geom_point() + geom_line(aes(x = Days, y = predicted, colour = Subject, group = Subject))
p+ theme_bw()
library(lmerTest)
mod <- lmer(Reaction ~ 1 + Days + (1 | Subject), data=sleepstudy)
summary(mod)
sleepstudy$predicted=predict(mod)
library(ggplot2)
p=ggplot(sleepstudy, aes(x = Days, y = Reaction, colour = Subject, group = Subject)) + geom_point()  +geom_line(aes(x = Days, y = predicted, colour = Subject, group = Subject))
p+ theme_bw()
library(tidyverse)
dati1lev=sleepstudy %>%
group_by(Subject) %>%
summarize(Slope=(coefficients(lm(Reaction ~ Days))[2]))
head(dati1lev)
mean(dati1lev$Slope)
hist(dati1lev$Slope)
library(jointest)
mod=flip2sss(Reaction ~ 1 + Days,
cluster =sleepstudy$Subject,data=sleepstudy)
summary(mod)
debug(flip2sss)
mod=flip2sss(Reaction ~ 1 + Days,
cluster =sleepstudy$Subject,data=sleepstudy)
data2lev
makedata2lev
devtools::install("C:\\Users\\admin\\Documents\\github\\jointest")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("lme4")
data("sleepstudy", package="lme4")
summary(sleepstudy)
library(lmerTest)
library(ggplot2)
p=ggplot(sleepstudy, aes(x = Days, y = Reaction)) + geom_point() + theme_bw()
p
p+geom_smooth(method=lm)
mod <- lm(Reaction ~ Subject + Days, sleepstudy)
summary(mod)
p=ggplot(sleepstudy, aes(x = Days, y = Reaction, colour = Subject, group = Subject)) + geom_point()  +geom_line(aes(x = Days, y = Reaction, colour = Subject, group = Subject))
p+ theme_bw()
# The standard way
mod=aov(Reaction ~ Days + Error(Subject/(Days)),data=sleepstudy)
summary(mod)
library(ez)
mod=ezANOVA(dv=Reaction, wid=Subject, within=.(Days),data=sleepstudy,type=3)
print(mod)
library(lmerTest)
mod <- lmer(Reaction ~ 1+Days + (1 + Days| Subject), data=sleepstudy)
summary(mod)
sleepstudy$predicted=predict(mod)
library(ggplot2)
p=ggplot(sleepstudy, aes(x = Days, y = Reaction, colour = Subject, group = Subject)) + geom_point() + geom_line(aes(x = Days, y = predicted, colour = Subject, group = Subject))
p+ theme_bw()
library(lmerTest)
mod <- lmer(Reaction ~ 1 + Days + (1 | Subject), data=sleepstudy)
summary(mod)
sleepstudy$predicted=predict(mod)
library(ggplot2)
p=ggplot(sleepstudy, aes(x = Days, y = Reaction, colour = Subject, group = Subject)) + geom_point()  +geom_line(aes(x = Days, y = predicted, colour = Subject, group = Subject))
p+ theme_bw()
library(tidyverse)
dati1lev=sleepstudy %>%
group_by(Subject) %>%
summarize(Slope=(coefficients(lm(Reaction ~ Days))[2]))
head(dati1lev)
mean(dati1lev$Slope)
hist(dati1lev$Slope)
t.test(dati1lev$Slope)
library(jointest)
mod=flip2sss(Reaction ~ 1 + Days,
cluster =sleepstudy$Subject,data=sleepstudy)
summary(mod)
debug(flip2sss)
mod=flip2sss(Reaction ~ 1 + Days,
cluster =sleepstudy$Subject,data=sleepstudy)
knitr::opts_chunk$set(echo = TRUE)
dati=read.csv(file = "oasis_longitudinal.csv")
dati$Group=factor(dati$Group,levels=c("Nondemented","Converted","Demented"))
# da qui 0 è pari a Age=77
dati$Age=dati$Age-77
library(ggplot2)
p <- ggplot(dati,aes(Group,nWBV,color=Group))
p+geom_point(size = 3) +geom_boxplot(alpha=.1) + theme_bw()
p <- ggplot(dati,aes(Age,nWBV,color=Group))
p+geom_point(size = 3) +geom_smooth(method = lm) + theme_bw()
library(lmerTest)
library(ggplot2)
p=ggplot(dati, aes(x = Age, y = nWBV, colour = Group, group = Subject.ID)) + geom_line() + geom_point()
p + theme_bw()
mod=lmer(nWBV ~ Group+Age+(1+Age|Subject.ID),data=dati)
summary(mod)
anova(mod)
mod=lmer(nWBV ~ Age*Group+(1+Age|Subject.ID),data=dati)
summary(mod)
anova(mod)
library(jointest)
mod=flip2sss(nWBV ~ Age*Group+Gender*Group,
cluster =oasis$Subject.ID,data=oasis)
summary(mod)
#ANOVA-like combination
#Overall
summary(combine(mod))
#by Variables
summary(combine_contrasts(mod))
knitr::opts_chunk$set(echo = TRUE)
mod=lmer(nWBV ~ Age*Group+Gender*Group+(1+Age|Subject.ID),data=dati)
library(lmerTest)
p=ggplot(dati, aes(x = Age, y = nWBV, colour = Group, group = Subject.ID)) + geom_line() + geom_point()
knitr::opts_chunk$set(echo = TRUE)
dati=read.csv(file = "oasis_longitudinal.csv")
dati$Group=factor(dati$Group,levels=c("Nondemented","Converted","Demented"))
# da qui 0 è pari a Age=77
dati$Age=dati$Age-77
library(ggplot2)
p <- ggplot(dati,aes(Group,nWBV,color=Group))
p+geom_point(size = 3) +geom_boxplot(alpha=.1) + theme_bw()
p <- ggplot(dati,aes(Age,nWBV,color=Group))
p+geom_point(size = 3) +geom_smooth(method = lm) + theme_bw()
library(lmerTest)
library(ggplot2)
p=ggplot(dati, aes(x = Age, y = nWBV, colour = Group, group = Subject.ID)) + geom_line() + geom_point()
p + theme_bw()
mod=lmer(nWBV ~ Age*Group+Gender*Group+(1+Age|Subject.ID),data=dati)
mod=lmer(nWBV ~ Age*Group+M.F*Group+(1+Age|Subject.ID),data=dati)
summary(mod)
anova(mod)
mod=lmer(nWBV ~ Age*Group+Gender*Group+(1+Age|Subject.ID),data=oasis)
knitr::opts_chunk$set(echo = TRUE)
dati=read.csv(file = "oasis_longitudinal.csv")
dati$Group=factor(dati$Group,levels=c("Nondemented","Converted","Demented"))
# da qui 0 è pari a Age=77
dati$Age=dati$Age-77
library(ggplot2)
p <- ggplot(dati,aes(Group,nWBV,color=Group))
p+geom_point(size = 3) +geom_boxplot(alpha=.1) + theme_bw()
p <- ggplot(dati,aes(Age,nWBV,color=Group))
p+geom_point(size = 3) +geom_smooth(method = lm) + theme_bw()
library(lmerTest)
library(ggplot2)
p=ggplot(dati, aes(x = Age, y = nWBV, colour = Group, group = Subject.ID)) + geom_line() + geom_point()
p + theme_bw()
mod=lmer(nWBV ~ Age*Group+Gender*Group+(1+Age|Subject.ID),data=oasis)
mod=flip2sss(nWBV ~ Age*Group+Gender*Group,
cluster =oasis$Subject.ID,data=oasis)
library(jointest)
mod=flip2sss(nWBV ~ Age*Group+Gender*Group,
cluster =oasis$Subject.ID,data=oasis)
mod=lmer(nWBV ~ Age*Group+Gender*Group+(1+Age|Subject.ID),data=oasis)
summary(mod)
anova(mod)
summary(mod)
mod=lmer(nWBV ~ Age*Group+Gender*Group+(1|Subject.ID),data=oasis)
summary(mod)
anova(mod)
